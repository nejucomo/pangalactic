name: PRCI

on:
  pull_request:
    types: [opened, synchronize]

  # NO MERGE: Temporarily enable this to test without PR merges each cycle:
  push:
    branches: [ci-caching]

jobs:
  # NO MERGE: Temporarily disabled for pre-PR testing (save resources):
  # build-and-test-no-nix:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: rustup toolchain install nightly
  #     - run: rustup target add wasm32-unknown-unknown --toolchain nightly
  #     - run: rustup component add rustfmt --toolchain nightly
  #     - uses: actions/checkout@v2
  #     - run: cargo +nightly fmt -- --check
  #     - run: cargo +nightly test
  #     - run: cargo +nightly build
  #     - run: cargo +nightly doc

  nix-build:
    name: Build Nix targets
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@main
      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: Cache nix prerequisite derivations
        id: cache-nix-bin-cargo-artifacts
        uses: actions/cache@v4
        env:
          cache-name: cache-nix-bin-cargo-artifacts
        with:
          path: /tmp/gh-nix-cache/
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ steps.compute-nix-cache-hash.outputs.nix_cache_hash }}

      - if: ${{ steps.cache-nix-bin-cargo-artifacts.outputs.cache-hit == 'true' }}
        name: Restore nix nar cache
        run: nix copy --all --from file:///tmp/gh-nix-cache/

      - name: Build default package
        run: nix build .#all
